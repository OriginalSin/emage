/**
 *  http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/
 */

uniform sampler2D texture; // the texture with the scene you want to blur
varying vec2 vUv;
 
uniform float blurSize; // I've chosen this size because this will result in that every step will be one pixel wide if the texture texture is of size 512x512
 
void main(void)
{
   vec4 sum = vec4(0.0);
 
   // blur in y (vertical)
   // take nine samples, with the distance blurSize between them
   sum += texture2D(texture, vec2(vUv.x - 4.0*blurSize, vUv.y)) * 0.05;
   sum += texture2D(texture, vec2(vUv.x - 3.0*blurSize, vUv.y)) * 0.09;
   sum += texture2D(texture, vec2(vUv.x - 2.0*blurSize, vUv.y)) * 0.12;
   sum += texture2D(texture, vec2(vUv.x - blurSize, vUv.y)) * 0.15;
   sum += texture2D(texture, vec2(vUv.x, vUv.y)) * 0.16;
   sum += texture2D(texture, vec2(vUv.x + blurSize, vUv.y)) * 0.15;
   sum += texture2D(texture, vec2(vUv.x + 2.0*blurSize, vUv.y)) * 0.12;
   sum += texture2D(texture, vec2(vUv.x + 3.0*blurSize, vUv.y)) * 0.09;
   sum += texture2D(texture, vec2(vUv.x + 4.0*blurSize, vUv.y)) * 0.05;
 
   gl_FragColor = sum;
}