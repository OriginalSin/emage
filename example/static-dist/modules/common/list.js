define(["require","qpf","./listitem","knockout"],function(e){var t=e("qpf"),n=e("./listitem"),r=t.use("container/container"),i=e("knockout"),s=r.derive(function(){return{dataSource:i.observableArray([]),itemView:i.observable(n),selected:i.observable()}},{type:"LIST",css:"list",template:'<div data-bind="foreach:children" >                        <div class="qpf-container-item">                            <div data-bind="qpf_view:$data"></div>                        </div>                    </div>',initialize:function(){var e=_.clone(this.dataSource()),t=this;this.dataSource.subscribe(function(t){this._update(e,t),e=_.clone(t),_.each(e,function(e,t){i.utils.unwrapObservable(e.selected)&&this.selected(t)},this)},this),this.selected.subscribe(function(e){this._unSelectAll();var t=this.children()[e];t&&t.$el.addClass("selected")},this),this.$el.delegate(".qpf-container-item","click",function(){var e=i.contextFor(this);t.selected(e.$index())}),this._update([],e)},_update:function(e,t){var n=this.children(),r=this.itemView(),s=[],o=i.utils.compareArrays(e,t),u=[];_.each(o,function(t){if(t.status==="retained"){var i=e.indexOf(t.value);s[i]=n[i]}else if(t.status==="added"){var o=new r({attributes:t.value});s[t.index]=o,n.splice(t.index,0,o),u.push(o)}},this),this.children(s),_.each(u,function(e){e.render()})},_unSelectAll:function(){_.each(this.children(),function(e,t){e.$el.removeClass("selected")},this)}});return r.provideBinding("list",s),s});