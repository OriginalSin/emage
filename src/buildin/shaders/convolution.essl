varying vec2 vUv;
uniform sampler2D texture;
uniform mat4 convolutionMatrix;

uniform float imageWidth;
uniform float imageHeight;

void main(){

    vec4 tex = texture2D( texture, vUv);

    vec3 color = vec3(0.0);

    vec2 offset = vec2(1.0/imageWidth, 1.0/imageHeight);

    // top left
    color += texture2D(texture, vUv+vec2(-offset.x, -offset.y)).rgb*convolutionMatrix[0][0];
    // top
    color += texture2D(texture, vUv+vec2(0, -offset.y)).rgb*convolutionMatrix[0][1];
    // top right
    color += texture2D(texture, vUv+vec2(offset.x, -offset.y)).rgb*convolutionMatrix[0][2];
    // left
    color += texture2D(texture, vUv+vec2(-offset.x, 0)).rgb*convolutionMatrix[1][0];
    // center
    color += tex.rgb * convolutionMatrix[1][1];
    // right
    color += texture2D(texture, vUv+vec2(offset.x, 0)).rgb*convolutionMatrix[1][2];
    // bottom left
    color += texture2D(texture, vUv+vec2(-offset.x, offset.y)).rgb*convolutionMatrix[2][0];
    // bottom
    color += texture2D(texture, vUv+vec2(0, offset.y)).rgb*convolutionMatrix[2][1];
    // bottom right
    color += texture2D(texture, vUv+offset).rgb*convolutionMatrix[2][2];

    gl_FragColor = vec4(color, tex.a);
}