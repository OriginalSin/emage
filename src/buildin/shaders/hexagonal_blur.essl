@export emage.hexagonal_blur_1

uniform sampler2D texture;
varying vec2 v_Texcoord;

uniform float blurSize : 1.0;

uniform float imageWidth : 512.0;
uniform float imageHeight : 512.0;

void main(void){
   vec2 offset = vec2(blurSize/imageWidth, blurSize/imageHeight);

   vec4 color = vec4(0.0);
   // Top
   for(int i = 0; i < 30; i++){
      color += 1.0/30.0 * texture2D(texture, v_Texcoord + vec2(0.0, offset.y * float(i)) );
   }
   gl_FragColor = color;
}

@end

@export emage.hexagonal_blur_2

uniform sampler2D texture;
varying vec2 v_Texcoord;

uniform float blurSize : 1.0;

uniform float imageWidth : 512.0;
uniform float imageHeight : 512.0;

void main(void){
   vec2 offset = vec2(blurSize/imageWidth, blurSize/imageHeight);

   vec4 color = vec4(0.0);
   // Down left
   for(int i = 0; i < 30; i++){
      color += 1.0/30.0 * texture2D(texture, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );
   }
   gl_FragColor = color;
}
@end

@export emage.hexagonal_blur_3

uniform sampler2D texture1;
uniform sampler2D texture2;

varying vec2 v_Texcoord;

uniform float blurSize : 1.0;

uniform float imageWidth : 1.0;
uniform float imageHeight : 1.0;

void main(void){
   vec2 offset = vec2(blurSize/imageWidth, blurSize/imageHeight);

   vec4 color1 = vec4(0.0);
   // Down left
   for(int i = 0; i < 30; i++){
      color1 += 1.0/30.0 * texture2D(texture1, v_Texcoord - vec2(offset.x * float(i), offset.y * float(i)) );
   }
   vec4 color2 = vec4(0.0);
   // Down right
   for(int i = 0; i < 30; i++){
      color2 += 1.0/30.0 * texture2D(texture1, v_Texcoord + vec2(offset.x * float(i), -offset.y * float(i)) );
   }

   vec4 color3 = vec4(0.0);
   // Down right
   for(int i = 0; i < 30; i++){
      color3 += 1.0/30.0 * texture2D(texture2, v_Texcoord + vec2(offset.x * float(i), -offset.y * float(i)) );
   }

   gl_FragColor = (color1 + color2 + color3) / 3.0;
}

@end